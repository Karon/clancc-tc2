diff --git a/src/server/game/Entities/Player/Player.cpp b/src/server/game/Entities/Player/Player.cpp
index f8fe2df..6942304 100755
--- a/src/server/game/Entities/Player/Player.cpp
+++ b/src/server/game/Entities/Player/Player.cpp
@@ -7401,6 +7401,47 @@ void Player::UpdateZone(uint32 newZone, uint32 newArea)
         sOutdoorPvPMgr->HandlePlayerEnterZone(this, newZone);
         SendInitWorldStates(newZone, newArea);              // only if really enters to new zone, not just area change, works strange...
     }
+    // Prevent players from accessing GM Island
+    if (sWorld->getBoolConfig(CONFIG_GMISLAND_PLAYERS_NOACCESS_ENABLE) == true)
+    {
+        if (newZone == 876 && GetSession()->GetSecurity() == SEC_PLAYER)
+        {
+            QueryResult result = CharacterDatabase.PQuery("SELECT * FROM `gmisland_teleport` WHERE 1");
+
+            Field* fields = result->Fetch();
+
+            if (result)
+            {
+                uint32   map           = fields[0].GetUInt32();
+                double   x             = fields[1].GetDouble();
+                double   y             = fields[2].GetDouble();
+                double   z             = fields[3].GetDouble();
+                double   orientation   = fields[4].GetDouble();
+
+                if (map == 876)
+                {
+                    sLog->outError("Player (GUID: %u) tried to access GM Island.", GetGUIDLow());
+                    sLog->outError("Error: Cannot set tele to GM Island (map: %u). Sending possible hacker to default location. (Jail Box)",map);
+                    TeleportTo(13,1.118799,0.477914,-144.708650,3.133046); // Tele to Jail Box
+                    CastSpell(this, 9454, true); // Cast GM Freeze on player
+                }
+
+                if (map != 876)
+                {
+                    sLog->outError("Player (GUID: %u) tried to access GM Island. Sending possible hacker to %u,%u,%u,%u,%u", GetGUIDLow(), map, x, y, z, orientation);
+                    TeleportTo(map,x,y,z,orientation);
+                    if (map == 13)
+                        CastSpell(this, 9454, true); // Cast GM Freeze on player
+                }
+
+                if (sWorld->getBoolConfig(CONFIG_GMISLAND_BAN_ENABLE) == true)
+                {
+                    sLog->outError("Player (GUID: %u) tried to access GM Island. Banning Player Account.", GetGUIDLow());
+                    sWorld->BanAccount(BAN_ACCOUNT, this->GetName(),secsToTimeString(TimeStringToSecs("-1"),true).c_str(),"Being on GM Island","Anticheat protection");
+                }
+            }
+        }
+    }

     m_zoneUpdateId    = newZone;
     m_zoneUpdateTimer = ZONE_UPDATE_INTERVAL;
diff --git a/src/server/game/Spells/SpellEffects.cpp b/src/server/game/Spells/SpellEffects.cpp
index 825c8c4..74d5288 100755
--- a/src/server/game/Spells/SpellEffects.cpp
+++ b/src/server/game/Spells/SpellEffects.cpp
@@ -5464,6 +5464,13 @@ void Spell::EffectStuck(SpellEffIndex /*effIndex*/)

     Player* pTarget = (Player*)unitTarget;

+    // Prevent players from trying to unstuck themselves in the Jail box.
+    if (pTarget->GetMapId() == 13 && pTarget->GetSession()->GetSecurity() == SEC_PLAYER)
+    {
+        sLog->outError("Player %s (guid %u) tried to use unstuck in Jail box.", pTarget->GetName(), pTarget->GetGUIDLow());
+        return;
+    }
+
     sLog->outDebug(LOG_FILTER_SPELLS_AURAS, "Spell Effect: Stuck");
     sLog->outDetail("Player %s (guid %u) used auto-unstuck future at map %u (%f, %f, %f)", pTarget->GetName(), pTarget->GetGUIDLow(), m_caster->GetMapId(), m_caster->GetPositionX(), pTarget->GetPositionY(), pTarget->GetPositionZ());

@@ -5863,7 +5870,7 @@ void Spell::EffectReputation(SpellEffIndex effIndex)
     {
         rep_change = int32((float)rep_change * repData->spell_rate);
     }
-
+
     // Bonus from spells that increase reputation gain
     float bonus = rep_change * _player->GetTotalAuraModifier(SPELL_AURA_MOD_REPUTATION_GAIN) / 100.0; // 10%
     rep_change += (int32)bonus;
@@ -6959,7 +6966,7 @@ void Spell::EffectCastButtons(SpellEffIndex effIndex)
         if (!ab || ab->GetType() != ACTION_BUTTON_SPELL)
             continue;

-        //! Action button data is unverified when it's set so it can be "hacked"
+        //! Action button data is unverified when it's set so it can be "hacked"
         //! to contain invalid spells, so filter here.
         uint32 spell_id = ab->GetAction();
         if (!spell_id)
@@ -6974,7 +6981,7 @@ void Spell::EffectCastButtons(SpellEffIndex effIndex)

         if (!(spellInfo->AttributesEx7 & SPELL_ATTR7_SUMMON_PLAYER_TOTEM))
             continue;
-
+
         uint32 cost = spellInfo->CalcPowerCost(m_caster, spellInfo->GetSchoolMask());
         if (m_caster->GetPower(POWER_MANA) < cost)
             continue;
diff --git a/src/server/game/World/World.cpp b/src/server/game/World/World.cpp
index 639af40..ec25e0f 100755
--- a/src/server/game/World/World.cpp
+++ b/src/server/game/World/World.cpp
@@ -1183,6 +1183,10 @@ void World::LoadConfigSettings(bool reload)
     // MySQL ping time interval
     m_int_configs[CONFIG_DB_PING_INTERVAL] = sConfig->GetIntDefault("MaxPingTime", 30);

+    // Prevent players from accessing GM Island
+    m_bool_configs[CONFIG_GMISLAND_PLAYERS_NOACCESS_ENABLE] = sConfig->GetBoolDefault("GMIsland.PlayersNoAccess.Enable", true);
+    m_bool_configs[CONFIG_GMISLAND_BAN_ENABLE] = sConfig->GetBoolDefault("GMIsland.Ban.Enable", false);
+
     sScriptMgr->OnConfigLoad(reload);
 }

diff --git a/src/server/game/World/World.h b/src/server/game/World/World.h
index b045ce6..07fc1fc 100755
--- a/src/server/game/World/World.h
+++ b/src/server/game/World/World.h
@@ -158,6 +158,8 @@ enum WorldBoolConfigs
     CONFIG_ALLOW_TICKETS,
     CONFIG_DBC_ENFORCE_ITEM_ATTRIBUTES,
     CONFIG_PRESERVE_CUSTOM_CHANNELS,
+    CONFIG_GMISLAND_PLAYERS_NOACCESS_ENABLE,
+    CONFIG_GMISLAND_BAN_ENABLE,
     BOOL_CONFIG_VALUE_COUNT
 };

diff --git a/src/server/worldserver/worldserver.conf.dist b/src/server/worldserver/worldserver.conf.dist
index d9ce9ee..7a8433c 100644
--- a/src/server/worldserver/worldserver.conf.dist
+++ b/src/server/worldserver/worldserver.conf.dist
@@ -2768,4 +2768,20 @@ LevelReq.Auction = 1
 LevelReq.Mail = 1

 #
+#      GMIsland.PlayersNoAccess.Enable
+#        Prevent access for players to gm island
+#        Default: 1 - Enable
+#                 0 - Disable
+
+GMIsland.PlayersNoAccess.Enable = 1
+
+#
+#      GMIsland.Ban.Enable
+#        Enable to ban players that tries to access GM Island without proper Access
+#        Default: 0 - Disable
+#                 1 - Enable
+
+GMIsland.Ban.Enable = 0
+
+#
 ###################################################################################################

diff -r 8d9a2eb7c952 sql/tools/gmisland.teleport.sql
--- /dev/null   Thu Jan 01 00:00:00 1970 +0000
+++ b/sql/tools/gmisland.teleport.sql   Wed Dec 01 11:54:07 2010 +0000
@@ -0,0 +1,16 @@
+-- Put this SQL in character database.
+DROP TABLE IF EXISTS `gmisland_teleport`;
+CREATE TABLE `gmisland_teleport` (
+`map` SMALLINT(5) UNSIGNED NOT NULL DEFAULT '0',
+`x` DOUBLE NOT NULL DEFAULT '0',
+`y` DOUBLE NOT NULL DEFAULT '0',
+`z` DOUBLE NOT NULL DEFAULT '0',
+`orientation` DOUBLE NOT NULL DEFAULT '0',
+`comment` VARCHAR(255),
+PRIMARY KEY (`map`)
+) ENGINE = MYISAM DEFAULT CHARSET=utf8;
+
+INSERT INTO `gmisland_teleport` (
+`map`,`x`,`y`,`z`,`orientation`,`comment`)
+VALUES (
+'13','1.118799','0.477914','-144.708650','3.133046','Jail Box');
